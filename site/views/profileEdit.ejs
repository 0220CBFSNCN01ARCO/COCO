<!DOCTYPE html>
<html lang="en">
<head>
    <% include partials\head.ejs %>
    <link rel="stylesheet" href="/stylesheets/profileEdit.css">
    
    <title>COCO | Edit profile </title>
</head> 
<body >
    
    <% include partials\header.ejs %> 

    <section class="container" id="cuerpo">

    <h2 id="titulo">Edit profile</h2>
    <div id="error">
        <% if (typeof errors != "undefined") { %>  
            <ul>
                
                <% for (let i = 0 ; i < errors.length ; i++) { %>
                    <li>
                        <%= errors[i].msg %>
                    </li>
                <% } %>
            </ul>
        <% } %>
    </div>
    <form class="needs-validation" novalidate action="/users/profile/edit/<%= ID %>?_method=PUT" method="POST" enctype="multipart/form-data">
        <div class="form-row" id="primeraColumna">
          <div class="col-6">
            <label for="validationCustom01">First name</label>
            <input type="text" class="form-control" id="validationCustom01" name="First_name" value="<%= userID.first_name %>" required>
            <div class="valid-feedback">
              Looks good!
            </div>
          </div>
          <div class="col-6">
            <label for="validationCustom02">Last name</label>
            <input type="text" class="form-control" id="validationCustom02" name="Last_name" value="<%= userID.last_name %>" required>
            <div class="valid-feedback">
              Looks good!
            </div>
          </div>
        </div>
        <div class="form-row">
          <div class="col-6">
            <label for="validationCustom03">Email</label>
            <input type="email" class="form-control" id="validationCustom03" name="Email" value="<%= userID.email %>" required>
            <div class="invalid-feedback">
              Please provide a valid email.
            </div>
          </div>
          <div class="col-3">
            <label for="validationCustom04">Password</label>
            <input type="password" class="form-control" id="validationCustom04" name="Password" value="<%= userID.password %>" required>
            <div class="invalid-feedback">
            Please enter your password.
            </div>
          </div> 
          <div class="col-3">
            <label for="validationCustom05">Confirm password</label>
            <input type="password" class="form-control" id="validationCustom05" name="passwordRepeat" value="<%= userID.password %>" required>
            <div class="invalid-feedback">
            Please enter your password.
            </div>
          </div>    
        
        </div>
        <div class="custom-file">
            <label form="">Avatar</label>
            <input type="file" name="image">
          </div>
        <div class="form-group" id="confirmacion">
          <div class="form-check">
            <input class="form-check-input" type="checkbox" id="invalidCheck" required>
            <label class="form-check-label" for="invalidCheck">
                <a id="terminos" href="/policy/Terms">
                    Agree to terms and conditions
                </a>
            </label>
                
            <div class="invalid-feedback">
              You must agree before submitting.
            </div>
          </div>
        </div>
        <div class="form-row">
        <div class="col-6">
        <button class="btn btn-primary" type="submit">Save changes</button>
        </div>  
        <div class="col-6">
            <a href="/users" ><button type="button" class="btn btn-primary">
              Cancel
              </button>
          </a>
          </div>
        </div>
      </form>
    </section>
      
      <script>
      // Example starter JavaScript for disabling form submissions if there are invalid fields
      (function() {
        'use strict';
        window.addEventListener('load', function() {
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          var forms = document.getElementsByClassName('needs-validation');
          // Loop over them and prevent submission
          var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
              if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add('was-validated');
            }, false);
          });
        }, false);
      })();
      </script>


    <% include partials\script.ejs %> 
</body>
<% include partials\footer.ejs %> 
</html>